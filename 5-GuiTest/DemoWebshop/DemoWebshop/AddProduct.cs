///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DemoWebshop
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddProduct recording.
    /// </summary>
    [TestModule("ff2f75c7-8a7b-45ae-8a98-248404c0fdc0", ModuleType.Recording, 1)]
    public partial class AddProduct : ITestModule
    {
        /// <summary>
        /// Holds an instance of the DemoWebshopRepository repository.
        /// </summary>
        public static DemoWebshopRepository repo = DemoWebshopRepository.Instance;

        static AddProduct instance = new AddProduct();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddProduct()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddProduct Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SmallSearchterms' at 58;19.", repo.ApplicationUnderTest.SmallSearchtermsInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.SmallSearchterms.Click("58;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'smartphone{Return}' with focus on 'ApplicationUnderTest.SmallSearchterms'.", repo.ApplicationUnderTest.SmallSearchtermsInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.SmallSearchterms.PressKeys("smartphone{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Smartphone') on item 'ApplicationUnderTest.Smartphone'.", repo.ApplicationUnderTest.SmartphoneInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.SmartphoneInfo, "InnerText", "Smartphone");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest' at 685;798.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Self.Click("685;798");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='\n                                Smartphone\n                            ') on item 'ApplicationUnderTest.H1TagSm'.", repo.ApplicationUnderTest.H1TagSmInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.H1TagSmInfo, "InnerText", "\n                                Smartphone\n                            ");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddToCart.Addtocart43EnteredQuantity' at 23;9.", repo.ApplicationUnderTest.AddToCart.Addtocart43EnteredQuantityInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AddToCart.Addtocart43EnteredQuantity.Click("23;9");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}4' with focus on 'ApplicationUnderTest.AddToCart.Addtocart43EnteredQuantity'.", repo.ApplicationUnderTest.AddToCart.Addtocart43EnteredQuantityInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AddToCart.Addtocart43EnteredQuantity.PressKeys("{Back}4");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddToCart.Button' at 90;21.", repo.ApplicationUnderTest.AddToCart.ButtonInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.AddToCart.Button.Click("90;21");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.TheProductHasBeenAddedToYour'.", repo.ApplicationUnderTest.TheProductHasBeenAddedToYourInfo, new RecordItemIndex(8));
            Validate.Exists(repo.ApplicationUnderTest.TheProductHasBeenAddedToYourInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SmallSearchterms' at 149;13.", repo.ApplicationUnderTest.SmallSearchtermsInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.SmallSearchterms.Click("149;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'blue jeans{Return}' with focus on 'ApplicationUnderTest.SmallSearchterms'.", repo.ApplicationUnderTest.SmallSearchtermsInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.SmallSearchterms.PressKeys("blue jeans{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Blue Jeans') on item 'ApplicationUnderTest.BlueJeans'.", repo.ApplicationUnderTest.BlueJeansInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.BlueJeansInfo, "InnerText", "Blue Jeans");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest' at 700;797.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Self.Click("700;797");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='\n                                Blue Jeans\n                            ') on item 'ApplicationUnderTest.H1TagSm'.", repo.ApplicationUnderTest.H1TagSmInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.H1TagSmInfo, "InnerText", "\n                                Blue Jeans\n                            ");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddToCart.Addtocart36EnteredQuantity' at 23;5.", repo.ApplicationUnderTest.AddToCart.Addtocart36EnteredQuantityInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.AddToCart.Addtocart36EnteredQuantity.Click("23;5");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}4' with focus on 'ApplicationUnderTest.AddToCart.Addtocart36EnteredQuantity'.", repo.ApplicationUnderTest.AddToCart.Addtocart36EnteredQuantityInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AddToCart.Addtocart36EnteredQuantity.PressKeys("{Back}4");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddToCart.Button' at 30;6.", repo.ApplicationUnderTest.AddToCart.ButtonInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.AddToCart.Button.Click("30;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.TheProductHasBeenAddedToYour'.", repo.ApplicationUnderTest.TheProductHasBeenAddedToYourInfo, new RecordItemIndex(17));
            Validate.Exists(repo.ApplicationUnderTest.TheProductHasBeenAddedToYourInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ShoppingCart' at 70;5.", repo.ApplicationUnderTest.ShoppingCartInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.ShoppingCart.Click("70;5");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='404.00') on item 'ApplicationUnderTest.StrongTag40400'.", repo.ApplicationUnderTest.StrongTag40400Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.ApplicationUnderTest.StrongTag40400Info, "InnerText", "404.00");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
